#include <iostream>
#include "LinkedList.h"

/*
linked list
데이터를 추가할때 그때 그때 공간을 만든다.  

single linked list : 한쪽방향으로의 링크만 가지고 있을 경우
double linked list : 다음노드 , 이전노드 둘다 저장

장점 : 어디에 추가해도 동일한 속도

배열 과 비교해서 
순서대로 추가만 할때는 배열이 빠름
중간에 추가는 linked list가 빠름
(단, 용량이 늘어날때는 배열이 느림)
접근은 배열이 빠름 

*/
int main()
{
	CLinkedList<int>	IntList;

	for (int i = 0; i < 10; ++i)
	{
		IntList.push_back(i);
	}

	IntList.erase(5);

	CLinkedList<int>::iterator	iter;
	CLinkedList<int>::iterator	iterEnd = IntList.end();

	for (iter = IntList.begin(); iter != iterEnd; ++iter)
	{
		std::cout << *iter << std::endl;
	}

	return 0;
}
